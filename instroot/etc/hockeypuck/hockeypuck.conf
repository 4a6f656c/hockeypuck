#
# Hockeypuck configuration file
#

[hockeypuck]
logfile="/var/log/hockeypuck/hockeypuck.log"

### HTTP Keyserver Protocol settings
[hockeypuck.hkp]
bind=":11371"
webroot="/var/lib/hockeypuck/www"
 
### OpenPGP service settings
[hockeypuck.openpgp]
# Set verifySigs=true to capture the signature verification state
# in signature packet records. This can be used to improve the
# quality of the keyserver results, but it requires more CPU.
verifySigs=false
# Number of workers that will concurrently load key material into
# the database & prefix tree. Default is # of detected cores.
#nworkers=8

### OpenPGP database connection
[hockeypuck.openpgp.db]
# Currently, the only supported database/sql driver is postgres.
driver="postgres"
# The default data source name connects through a local socket
# to a database 'hkp' owned by the effective user.
dsn="dbname=hkp host=/var/run/postgresql sslmode=disable"

### SKS Reconciliation Protocol for OpenPGP
[conflux.recon]
# SKS recon listen port
reconPort=11370
# HTTP port reported to peer. This must match the port specified for
# hockeypuck.hkp.bind, or else it must be port-forwarded to be accessible
# to the recon peer.
httpPort=11371
# List of peers Hockeypuck will gossip with
#partners=["sks1.cmarstech.com:11370","sks2.cmarstech.com:11370"]
# SKS filters, which must match your peers' configuration
filters=["yminsky.dedup"]

### SKS Recon prefix tree
[conflux.recon.leveldb]
path="/var/lib/hockeypuck/recon-ptree"

### OpenPGP PKS mail synchronization
#[hockeypuck.openpgp.pks]
## Send keys to these PKS servers
#to=["pgp-public-keys@other1.example.com","pgp-public-keys@other2.example.com"]
## PKS sync mail from: address
#from="pgp-public-keys@yourhost.yourdomain.com"

### Custom SMTP settings for sending PKS mail. Default is host="localhost:25".
#[hockeypuck.openpgp.pks.smtp]
#host="smtp.gmail.com:587"  # SMTP hostname:port
#user="googly.user"  # SMTP account username, if necessary
#pass="googly.pass"  # SMTP account password

